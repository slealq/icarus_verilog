/* Generated by Yosys 0.7+655 (git sha1 d36d1193, gcc 8.1.1 -march=x86-64 -mtune=generic -O2 -fstack-protector-strong -fno-plt -fPIC -Os) */

(* src = "sum_pipe_cond.v:1" *)
module sum_pipe_est(clk, reset_L, dataA, dataB, sum30_dd);
  (* src = "sum_pipe_cond.v:20" *)
  wire _000_;
  (* src = "sum_pipe_cond.v:20" *)
  wire _001_;
  (* src = "sum_pipe_cond.v:20" *)
  wire [3:0] _002_;
  (* src = "sum_pipe_cond.v:20" *)
  wire [3:0] _003_;
  (* src = "sum_pipe_cond.v:20" *)
  wire [1:0] _004_;
  (* src = "sum_pipe_cond.v:20" *)
  wire [1:0] _005_;
  (* src = "sum_pipe_cond.v:20" *)
  wire [3:0] _006_;
  (* src = "sum_pipe_cond.v:20" *)
  wire [3:0] _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  (* src = "sum_pipe_cond.v:15" *)
  wire acarreo;
  (* src = "sum_pipe_cond.v:16" *)
  wire acarreo_d;
  (* src = "sum_pipe_cond.v:2" *)
  input clk;
  (* src = "sum_pipe_cond.v:4" *)
  input [3:0] dataA;
  (* src = "sum_pipe_cond.v:12" *)
  wire [3:0] dataA_d;
  (* src = "sum_pipe_cond.v:5" *)
  input [3:0] dataB;
  (* src = "sum_pipe_cond.v:13" *)
  wire [3:0] dataB_d;
  (* src = "sum_pipe_cond.v:3" *)
  input reset_L;
  (* src = "sum_pipe_cond.v:9" *)
  wire [1:0] sum10;
  (* src = "sum_pipe_cond.v:10" *)
  wire [1:0] sum10_d;
  (* src = "sum_pipe_cond.v:18" *)
  wire [3:0] sum30_d;
  (* src = "sum_pipe_cond.v:6" *)
  output [3:0] sum30_dd;
  NOT _052_ (
    .A(dataA[1]),
    .Y(_010_)
  );
  NOT _053_ (
    .A(dataB[1]),
    .Y(_011_)
  );
  NOT _054_ (
    .A(dataA_d[3]),
    .Y(_012_)
  );
  NOT _055_ (
    .A(dataB_d[3]),
    .Y(_013_)
  );
  NOT _056_ (
    .A(acarreo_d),
    .Y(_014_)
  );
  NAND _057_ (
    .A(sum30_d[3]),
    .B(reset_L),
    .Y(_015_)
  );
  NOT _058_ (
    .A(_015_),
    .Y(_007_[3])
  );
  NAND _059_ (
    .A(dataA_d[2]),
    .B(dataB_d[2]),
    .Y(_016_)
  );
  NOT _060_ (
    .A(_016_),
    .Y(_017_)
  );
  NOR _061_ (
    .A(dataA_d[2]),
    .B(dataB_d[2]),
    .Y(_018_)
  );
  NOT _062_ (
    .A(_018_),
    .Y(_019_)
  );
  NAND _063_ (
    .A(_016_),
    .B(_019_),
    .Y(_020_)
  );
  NOR _064_ (
    .A(_014_),
    .B(_020_),
    .Y(_021_)
  );
  NAND _065_ (
    .A(_014_),
    .B(_020_),
    .Y(_022_)
  );
  NAND _066_ (
    .A(reset_L),
    .B(_022_),
    .Y(_023_)
  );
  NOR _067_ (
    .A(_021_),
    .B(_023_),
    .Y(_006_[2])
  );
  NOR _068_ (
    .A(_017_),
    .B(_021_),
    .Y(_024_)
  );
  NOR _069_ (
    .A(_012_),
    .B(dataB_d[3]),
    .Y(_025_)
  );
  NOR _070_ (
    .A(dataA_d[3]),
    .B(_013_),
    .Y(_026_)
  );
  NOR _071_ (
    .A(_025_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _072_ (
    .A(_024_),
    .B(_027_),
    .Y(_028_)
  );
  NOR _073_ (
    .A(_024_),
    .B(_027_),
    .Y(_029_)
  );
  NAND _074_ (
    .A(reset_L),
    .B(_028_),
    .Y(_030_)
  );
  NOR _075_ (
    .A(_029_),
    .B(_030_),
    .Y(_006_[3])
  );
  NAND _076_ (
    .A(reset_L),
    .B(sum10_d[0]),
    .Y(_031_)
  );
  NOT _077_ (
    .A(_031_),
    .Y(_006_[0])
  );
  NAND _078_ (
    .A(reset_L),
    .B(sum10_d[1]),
    .Y(_032_)
  );
  NOT _079_ (
    .A(_032_),
    .Y(_006_[1])
  );
  NAND _080_ (
    .A(reset_L),
    .B(acarreo),
    .Y(_033_)
  );
  NOT _081_ (
    .A(_033_),
    .Y(_001_)
  );
  NAND _082_ (
    .A(dataA[0]),
    .B(dataB[0]),
    .Y(_034_)
  );
  NOR _083_ (
    .A(_010_),
    .B(_011_),
    .Y(_035_)
  );
  NAND _084_ (
    .A(dataA[1]),
    .B(dataB[1]),
    .Y(_036_)
  );
  NAND _085_ (
    .A(reset_L),
    .B(_035_),
    .Y(_037_)
  );
  NOR _086_ (
    .A(_034_),
    .B(_037_),
    .Y(_000_)
  );
  NAND _087_ (
    .A(reset_L),
    .B(dataB[2]),
    .Y(_038_)
  );
  NOT _088_ (
    .A(_038_),
    .Y(_003_[2])
  );
  NAND _089_ (
    .A(reset_L),
    .B(dataB[3]),
    .Y(_039_)
  );
  NOT _090_ (
    .A(_039_),
    .Y(_003_[3])
  );
  NAND _091_ (
    .A(reset_L),
    .B(dataA[2]),
    .Y(_040_)
  );
  NOT _092_ (
    .A(_040_),
    .Y(_002_[2])
  );
  NAND _093_ (
    .A(reset_L),
    .B(dataA[3]),
    .Y(_041_)
  );
  NOT _094_ (
    .A(_041_),
    .Y(_002_[3])
  );
  NOR _095_ (
    .A(dataA[0]),
    .B(dataB[0]),
    .Y(_042_)
  );
  NAND _096_ (
    .A(reset_L),
    .B(_034_),
    .Y(_043_)
  );
  NOR _097_ (
    .A(_042_),
    .B(_043_),
    .Y(_004_[0])
  );
  NAND _098_ (
    .A(_010_),
    .B(_011_),
    .Y(_044_)
  );
  NAND _099_ (
    .A(_036_),
    .B(_044_),
    .Y(_045_)
  );
  NAND _100_ (
    .A(_034_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _101_ (
    .A(_034_),
    .B(_045_),
    .Y(_047_)
  );
  NAND _102_ (
    .A(reset_L),
    .B(_046_),
    .Y(_048_)
  );
  NOR _103_ (
    .A(_047_),
    .B(_048_),
    .Y(_004_[1])
  );
  NAND _104_ (
    .A(reset_L),
    .B(sum10[0]),
    .Y(_049_)
  );
  NOT _105_ (
    .A(_049_),
    .Y(_005_[0])
  );
  NAND _106_ (
    .A(reset_L),
    .B(sum10[1]),
    .Y(_050_)
  );
  NOT _107_ (
    .A(_050_),
    .Y(_005_[1])
  );
  NAND _108_ (
    .A(reset_L),
    .B(sum30_d[0]),
    .Y(_051_)
  );
  NOT _109_ (
    .A(_051_),
    .Y(_007_[0])
  );
  NAND _110_ (
    .A(reset_L),
    .B(sum30_d[1]),
    .Y(_008_)
  );
  NOT _111_ (
    .A(_008_),
    .Y(_007_[1])
  );
  NAND _112_ (
    .A(reset_L),
    .B(sum30_d[2]),
    .Y(_009_)
  );
  NOT _113_ (
    .A(_009_),
    .Y(_007_[2])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _114_ (
    .C(clk),
    .D(_007_[0]),
    .Q(sum30_dd[0])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _115_ (
    .C(clk),
    .D(_007_[1]),
    .Q(sum30_dd[1])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _116_ (
    .C(clk),
    .D(_007_[2]),
    .Q(sum30_dd[2])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _117_ (
    .C(clk),
    .D(_007_[3]),
    .Q(sum30_dd[3])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _118_ (
    .C(clk),
    .D(_005_[0]),
    .Q(sum10_d[0])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _119_ (
    .C(clk),
    .D(_005_[1]),
    .Q(sum10_d[1])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _120_ (
    .C(clk),
    .D(_004_[0]),
    .Q(sum10[0])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _121_ (
    .C(clk),
    .D(_004_[1]),
    .Q(sum10[1])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _122_ (
    .C(clk),
    .D(_002_[2]),
    .Q(dataA_d[2])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _123_ (
    .C(clk),
    .D(_002_[3]),
    .Q(dataA_d[3])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _124_ (
    .C(clk),
    .D(_003_[2]),
    .Q(dataB_d[2])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _125_ (
    .C(clk),
    .D(_003_[3]),
    .Q(dataB_d[3])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _126_ (
    .C(clk),
    .D(_000_),
    .Q(acarreo)
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _127_ (
    .C(clk),
    .D(_001_),
    .Q(acarreo_d)
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _128_ (
    .C(clk),
    .D(_006_[0]),
    .Q(sum30_d[0])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _129_ (
    .C(clk),
    .D(_006_[1]),
    .Q(sum30_d[1])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _130_ (
    .C(clk),
    .D(_006_[2]),
    .Q(sum30_d[2])
  );
  (* src = "sum_pipe_cond.v:20" *)
  DFF _131_ (
    .C(clk),
    .D(_006_[3]),
    .Q(sum30_d[3])
  );
endmodule

(* top =  1  *)
(* src = "sumador_cond.v:1" *)
module sumador_est(clk, reset_L, idx, dataA, dataB, idx_dd, sum30_dd);
  (* src = "sumador_cond.v:21" *)
  wire [3:0] _00_;
  (* src = "sumador_cond.v:21" *)
  wire [3:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  (* src = "sumador_cond.v:2" *)
  input clk;
  (* src = "sumador_cond.v:5" *)
  input [3:0] dataA;
  (* src = "sumador_cond.v:6" *)
  input [3:0] dataB;
  (* src = "sumador_cond.v:4" *)
  input [3:0] idx;
  (* src = "sumador_cond.v:11" *)
  wire [3:0] idx_d;
  (* src = "sumador_cond.v:7" *)
  output [3:0] idx_dd;
  (* src = "sumador_cond.v:3" *)
  input reset_L;
  (* src = "sumador_cond.v:8" *)
  output [3:0] sum30_dd;
  NOT _27_ (
    .A(reset_L),
    .Y(_02_)
  );
  NOT _28_ (
    .A(idx[2]),
    .Y(_03_)
  );
  NOT _29_ (
    .A(idx_d[2]),
    .Y(_04_)
  );
  NAND _30_ (
    .A(idx[0]),
    .B(idx[1]),
    .Y(_05_)
  );
  NOT _31_ (
    .A(_05_),
    .Y(_06_)
  );
  NOR _32_ (
    .A(idx[0]),
    .B(idx[1]),
    .Y(_07_)
  );
  NOT _33_ (
    .A(_07_),
    .Y(_08_)
  );
  NAND _34_ (
    .A(reset_L),
    .B(_08_),
    .Y(_09_)
  );
  NOR _35_ (
    .A(_06_),
    .B(_09_),
    .Y(_00_[1])
  );
  NOR _36_ (
    .A(_03_),
    .B(_05_),
    .Y(_10_)
  );
  NAND _37_ (
    .A(_03_),
    .B(_05_),
    .Y(_11_)
  );
  NAND _38_ (
    .A(reset_L),
    .B(_11_),
    .Y(_12_)
  );
  NOR _39_ (
    .A(_10_),
    .B(_12_),
    .Y(_00_[2])
  );
  NOR _40_ (
    .A(idx[3]),
    .B(_10_),
    .Y(_13_)
  );
  NAND _41_ (
    .A(idx[3]),
    .B(_10_),
    .Y(_14_)
  );
  NAND _42_ (
    .A(reset_L),
    .B(_14_),
    .Y(_15_)
  );
  NOR _43_ (
    .A(_13_),
    .B(_15_),
    .Y(_00_[3])
  );
  NOR _44_ (
    .A(_02_),
    .B(idx_d[0]),
    .Y(_01_[0])
  );
  NAND _45_ (
    .A(idx_d[0]),
    .B(idx_d[1]),
    .Y(_16_)
  );
  NOT _46_ (
    .A(_16_),
    .Y(_17_)
  );
  NOR _47_ (
    .A(idx_d[0]),
    .B(idx_d[1]),
    .Y(_18_)
  );
  NOT _48_ (
    .A(_18_),
    .Y(_19_)
  );
  NAND _49_ (
    .A(reset_L),
    .B(_19_),
    .Y(_20_)
  );
  NOR _50_ (
    .A(_17_),
    .B(_20_),
    .Y(_01_[1])
  );
  NOR _51_ (
    .A(_04_),
    .B(_16_),
    .Y(_21_)
  );
  NAND _52_ (
    .A(_04_),
    .B(_16_),
    .Y(_22_)
  );
  NAND _53_ (
    .A(reset_L),
    .B(_22_),
    .Y(_23_)
  );
  NOR _54_ (
    .A(_21_),
    .B(_23_),
    .Y(_01_[2])
  );
  NOR _55_ (
    .A(idx_d[3]),
    .B(_21_),
    .Y(_24_)
  );
  NAND _56_ (
    .A(idx_d[3]),
    .B(_21_),
    .Y(_25_)
  );
  NAND _57_ (
    .A(reset_L),
    .B(_25_),
    .Y(_26_)
  );
  NOR _58_ (
    .A(_24_),
    .B(_26_),
    .Y(_01_[3])
  );
  NOR _59_ (
    .A(_02_),
    .B(idx[0]),
    .Y(_00_[0])
  );
  (* src = "sumador_cond.v:21" *)
  DFF _60_ (
    .C(clk),
    .D(_01_[0]),
    .Q(idx_dd[0])
  );
  (* src = "sumador_cond.v:21" *)
  DFF _61_ (
    .C(clk),
    .D(_01_[1]),
    .Q(idx_dd[1])
  );
  (* src = "sumador_cond.v:21" *)
  DFF _62_ (
    .C(clk),
    .D(_01_[2]),
    .Q(idx_dd[2])
  );
  (* src = "sumador_cond.v:21" *)
  DFF _63_ (
    .C(clk),
    .D(_01_[3]),
    .Q(idx_dd[3])
  );
  (* src = "sumador_cond.v:21" *)
  DFF _64_ (
    .C(clk),
    .D(_00_[0]),
    .Q(idx_d[0])
  );
  (* src = "sumador_cond.v:21" *)
  DFF _65_ (
    .C(clk),
    .D(_00_[1]),
    .Q(idx_d[1])
  );
  (* src = "sumador_cond.v:21" *)
  DFF _66_ (
    .C(clk),
    .D(_00_[2]),
    .Q(idx_d[2])
  );
  (* src = "sumador_cond.v:21" *)
  DFF _67_ (
    .C(clk),
    .D(_00_[3]),
    .Q(idx_d[3])
  );
  (* src = "sumador_cond.v:13" *)
  sum_pipe_est spc (
    .clk(clk),
    .dataA(dataA),
    .dataB(dataB),
    .reset_L(reset_L),
    .sum30_dd(sum30_dd)
  );
endmodule
