/* Generated by Yosys 0.7+655 (git sha1 d36d1193, gcc 8.1.1 -march=x86-64 -mtune=generic -O2 -fstack-protector-strong -fno-plt -fPIC -Os) */

(* top =  1  *)
(* src = "mux.v:2" *)
module mux_estructural(clk, reset_L, data_0, data_1, valid_0, valid_1, valid_out, data_out);
  (* src = "mux.v:35" *)
  wire [3:0] _00_;
  (* src = "mux.v:35" *)
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  (* src = "mux.v:3" *)
  input clk;
  (* src = "mux.v:5" *)
  input [3:0] data_0;
  (* src = "mux.v:6" *)
  input [3:0] data_1;
  (* init = 4'h0 *)
  (* src = "mux.v:10" *)
  output [3:0] data_out;
  (* src = "mux.v:4" *)
  input reset_L;
  (* init = 1'h0 *)
  (* src = "mux.v:13" *)
  wire selector;
  (* src = "mux.v:7" *)
  input valid_0;
  (* src = "mux.v:8" *)
  input valid_1;
  (* src = "mux.v:9" *)
  output valid_out;
  NOT _41_ (
    .A(reset_L),
    .Y(_02_)
  );
  NOT _42_ (
    .A(valid_1),
    .Y(_03_)
  );
  NOT _43_ (
    .A(valid_0),
    .Y(_04_)
  );
  NOT _44_ (
    .A(selector),
    .Y(_05_)
  );
  NOR _45_ (
    .A(_02_),
    .B(selector),
    .Y(_01_)
  );
  NAND _46_ (
    .A(valid_1),
    .B(data_1[1]),
    .Y(_06_)
  );
  NAND _47_ (
    .A(_03_),
    .B(data_out[1]),
    .Y(_07_)
  );
  NAND _48_ (
    .A(_06_),
    .B(_07_),
    .Y(_08_)
  );
  NAND _49_ (
    .A(_01_),
    .B(_08_),
    .Y(_09_)
  );
  NOR _50_ (
    .A(_02_),
    .B(_05_),
    .Y(_10_)
  );
  NOR _51_ (
    .A(valid_0),
    .B(data_out[1]),
    .Y(_11_)
  );
  NOR _52_ (
    .A(_04_),
    .B(data_0[1]),
    .Y(_12_)
  );
  NOR _53_ (
    .A(_11_),
    .B(_12_),
    .Y(_13_)
  );
  NAND _54_ (
    .A(_10_),
    .B(_13_),
    .Y(_14_)
  );
  NAND _55_ (
    .A(_09_),
    .B(_14_),
    .Y(_00_[1])
  );
  NAND _56_ (
    .A(valid_0),
    .B(data_0[2]),
    .Y(_15_)
  );
  NAND _57_ (
    .A(_04_),
    .B(data_out[2]),
    .Y(_16_)
  );
  NAND _58_ (
    .A(_15_),
    .B(_16_),
    .Y(_17_)
  );
  NAND _59_ (
    .A(_10_),
    .B(_17_),
    .Y(_18_)
  );
  NAND _60_ (
    .A(_03_),
    .B(data_out[2]),
    .Y(_19_)
  );
  NAND _61_ (
    .A(valid_1),
    .B(data_1[2]),
    .Y(_20_)
  );
  NAND _62_ (
    .A(_19_),
    .B(_20_),
    .Y(_21_)
  );
  NAND _63_ (
    .A(_01_),
    .B(_21_),
    .Y(_22_)
  );
  NAND _64_ (
    .A(_18_),
    .B(_22_),
    .Y(_00_[2])
  );
  NAND _65_ (
    .A(_03_),
    .B(data_out[3]),
    .Y(_23_)
  );
  NAND _66_ (
    .A(valid_1),
    .B(data_1[3]),
    .Y(_24_)
  );
  NAND _67_ (
    .A(_23_),
    .B(_24_),
    .Y(_25_)
  );
  NAND _68_ (
    .A(_01_),
    .B(_25_),
    .Y(_26_)
  );
  NAND _69_ (
    .A(_04_),
    .B(data_out[3]),
    .Y(_27_)
  );
  NAND _70_ (
    .A(valid_0),
    .B(data_0[3]),
    .Y(_28_)
  );
  NAND _71_ (
    .A(_27_),
    .B(_28_),
    .Y(_29_)
  );
  NAND _72_ (
    .A(_10_),
    .B(_29_),
    .Y(_30_)
  );
  NAND _73_ (
    .A(_26_),
    .B(_30_),
    .Y(_00_[3])
  );
  NAND _74_ (
    .A(valid_1),
    .B(_01_),
    .Y(_31_)
  );
  NAND _75_ (
    .A(valid_0),
    .B(_10_),
    .Y(_32_)
  );
  NAND _76_ (
    .A(_31_),
    .B(_32_),
    .Y(valid_out)
  );
  NAND _77_ (
    .A(valid_0),
    .B(data_0[0]),
    .Y(_33_)
  );
  NAND _78_ (
    .A(_04_),
    .B(data_out[0]),
    .Y(_34_)
  );
  NAND _79_ (
    .A(_33_),
    .B(_34_),
    .Y(_35_)
  );
  NAND _80_ (
    .A(_10_),
    .B(_35_),
    .Y(_36_)
  );
  NAND _81_ (
    .A(_03_),
    .B(data_out[0]),
    .Y(_37_)
  );
  NAND _82_ (
    .A(valid_1),
    .B(data_1[0]),
    .Y(_38_)
  );
  NAND _83_ (
    .A(_37_),
    .B(_38_),
    .Y(_39_)
  );
  NAND _84_ (
    .A(_01_),
    .B(_39_),
    .Y(_40_)
  );
  NAND _85_ (
    .A(_36_),
    .B(_40_),
    .Y(_00_[0])
  );
  (* src = "mux.v:35" *)
  DFF _86_ (
    .C(clk),
    .D(_00_[0]),
    .Q(data_out[0])
  );
  (* src = "mux.v:35" *)
  DFF _87_ (
    .C(clk),
    .D(_00_[1]),
    .Q(data_out[1])
  );
  (* src = "mux.v:35" *)
  DFF _88_ (
    .C(clk),
    .D(_00_[2]),
    .Q(data_out[2])
  );
  (* src = "mux.v:35" *)
  DFF _89_ (
    .C(clk),
    .D(_00_[3]),
    .Q(data_out[3])
  );
  (* src = "mux.v:35" *)
  DFF _90_ (
    .C(clk),
    .D(_01_),
    .Q(selector)
  );
endmodule
